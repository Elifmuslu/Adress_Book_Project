/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javafxapplication2;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.application.Application;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;
import javafx.stage.WindowEvent;

/**
 *
 * @author pc
 */
public class JavaFXApplication2 extends Application {
    
    
    @Override
    public void start(Stage primaryStage) throws FileNotFoundException, IOException {
        RandomAccessFile raf = new RandomAccessFile("employee", "rw");
        
        //UI Define
        Label label_id = new Label("ID : ");
        TextField input_id = new TextField();
        
        Label label_name = new Label("Name : ");
        TextField input_name = new TextField();
        
        Label label_street = new Label("Street : ");
        TextField input_street = new TextField();
        
        Label label_city = new Label("City : ");
        TextField input_city = new TextField();
        
        Label label_gender = new Label("Gender : ");
        TextField input_gender = new TextField();
        input_gender.setPrefWidth(50);
        
        Label label_zip = new Label("Zip : ");
        TextField input_zip = new TextField();
        input_zip.setPrefWidth(50);
        
        Button btn_add = new Button("Add");;
        Button btn_first = new Button("First");
        Button btn_next = new Button("Next");
        Button btn_prev = new Button("Previous");
        Button btn_last = new Button("Last");
        Button btn_update = new Button("Update");
        Button btn_search = new Button("Search");
        
        //Set def cons
        AdressBook def = new AdressBook();
        
        //
        input_name.setTextFormatter(new TextFormatter<>((change) -> {
            String a = change.getText().replaceAll("\\d","");
            change.setText(a);
            if(input_name.getText().length() > 16){
                change.setText("");
            }
            return change;
        }));
        
       input_street.setTextFormatter(new TextFormatter<> ((change) ->{
            change.setText(change.getText());
            if(input_street.getText().length() > 16){
                change.setText("");
            }
            return change;
       }) );
        
        input_city.setTextFormatter(new TextFormatter<>((change) -> {
            String a = change.getText().replaceAll("\\d","");
            change.setText(a);
            if(input_city.getText().length() > 16){
                change.setText("");
            }
            return change;
        }));
        
        input_gender.setTextFormatter(new TextFormatter<>((change) -> {
            String a = change.getText().replaceAll("\\d","").replaceAll(" ", "");
             if( a.indexOf("M")  >= 0  || a.indexOf("F") >= 0   || a.isEmpty() ){
                     change.setText(a);
             }
            else{
                     change.setText("");
                     this.showError("Only M and F");
            }
            
             
           System.out.println(a + " " + input_gender.getText().length() );
           return change;
        }));
        
        input_zip.setTextFormatter(new TextFormatter<>((change) -> {
            change.setText(change.getText().replaceAll("[A-Za-z]",""));
            return change;
        }));
        
         input_id.setTextFormatter(new TextFormatter<>((change) -> {
            change.setText(change.getText().replaceAll("[A-Za-z]",""));
            return change;
        }));

        btn_add.setOnAction( (event) -> {
     
            String id = input_id.getText().replaceAll(" ", "");
            String name = input_name.getText();
            String street = input_street.getText();
            String city = input_city.getText();
            String gender =  input_gender.getText();
            String zip    = input_zip.getText().replaceAll(" ", "");
            
            if( emptySpace(id,name,street,city,gender,zip) ){
                   showError("Empty Field");
            }
            else{
             AdressBook temp = new AdressBook(Integer.parseInt(id),name,street,city,gender,Integer.parseInt(zip) );
                try {
                
                temp.write(raf);
                  
                } catch (IOException ex) {
                    Logger.getLogger(JavaFXApplication2.class.getName()).log(Level.SEVERE, null, ex);
                }
             
            }
            
            
        });
        
        btn_first.setOnAction( (event) -> {
            try {
                def.starter(raf, input_id, input_name, input_street, input_city, input_gender, input_zip);
            } catch (IOException ex) {
                Logger.getLogger(JavaFXApplication2.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        });
         
        btn_next.setOnAction( (event) -> {
            try {
                def.nextOne(raf, input_id, input_name, input_street, input_city, input_gender, input_zip);
            } catch (IOException ex) {
                Logger.getLogger(JavaFXApplication2.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
          
          
        btn_prev.setOnAction( (event) -> {
            try {
                def.prevOne(raf, input_id, input_name, input_street, input_city, input_gender, input_zip);
            } catch (IOException ex) {
                Logger.getLogger(JavaFXApplication2.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
           
        btn_last.setOnAction( (event) -> {
            try {
                def.lastOne(raf, input_id, input_name, input_street, input_city, input_gender, input_zip);
            } catch (IOException ex) {
                Logger.getLogger(JavaFXApplication2.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
        
        btn_update.setOnAction( (event) -> {
            String id = input_id.getText().replaceAll(" ", "");
            String name = input_name.getText();
            String street = input_street.getText();
            String city = input_city.getText();
            String gender =  input_gender.getText();
            String zip    = input_zip.getText().replaceAll(" ", "");
            
            if( emptySpace(id,name,street,city,gender,zip) ){
                   showError("Empty Field");
            }
            else{
             AdressBook temp = new AdressBook(Integer.parseInt(id),name,street,city,gender,Integer.parseInt(zip) );
                try {
                
                temp.update_data(Integer.parseInt(id), raf, input_id, input_name, input_street, input_city, input_gender, input_zip);
                  
                } catch (IOException ex) {
                    Logger.getLogger(JavaFXApplication2.class.getName()).log(Level.SEVERE, null, ex);
                }
             
            }
        });
        
        btn_search.setOnAction( (event) -> {
            try {
                def.search_id( Integer.parseInt(input_id.getText()), raf, input_id, input_name, input_street, input_city, input_gender, input_zip);
            } catch (IOException ex) {
                Logger.getLogger(JavaFXApplication2.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
     
     
        
        
        GridPane grid = new GridPane();
        grid.setHgap(10);
        grid.setVgap(10);
        
        
        //grid.setGridLinesVisible(true);
        
        
        
        grid.add(label_id, 1, 0);
        grid.add(input_id,2,0,5,1);
        
        grid.add(label_name,  1, 1);
        grid.add(input_name,2,1,5,1);
        
        grid.add(label_street, 1, 2);
        grid.add(input_street,2,2,5,1);
        
    
        
        grid.add(label_city, 1, 3);
        grid.add(input_city, 2,3);
        
        grid.add(label_gender,3,3);
        grid.add(input_gender,4,3);
        
        grid.add(label_zip,5,3);
        grid.add(input_zip,6,3);
        
        
        GridPane grid2 = new GridPane();
        grid2.setHgap(12);
        grid2.setPadding(new Insets(5, 5, 5, 5));
        grid2.add(btn_add,1,4,1,1 );
        grid2.add(btn_first,2,4,1,1);
        grid2.add(btn_next,3,4);
        grid2.add(btn_prev,4,4);
        grid2.add(btn_last,5,4);
        grid2.add(btn_update,6,4);
        grid2.add(btn_search,7,4);
        
        
        VBox rootPane = new VBox();
        rootPane.getChildren().addAll(grid,grid2);
        
        
        grid.setPrefSize(100, 100);
        Scene scene = new Scene( rootPane , 435, 180);
        primaryStage.setTitle("Adress Book");
        primaryStage.setScene(scene);
        primaryStage.show();
        
        def.starter(raf, input_id, input_name, input_street, input_city, input_gender, input_zip);
       
        primaryStage.setOnCloseRequest(new EventHandler<WindowEvent>() {
          public void handle(WindowEvent we) {
              try {
                  raf.close();
              } catch (IOException ex) {
                  Logger.getLogger(JavaFXApplication2.class.getName()).log(Level.SEVERE, null, ex);
              }
          }
         });
        
    }
    
    
    
  
    
    public static void showError(String errorMsg){
            
        Alert alert = new Alert(AlertType.ERROR);
        alert.setTitle("Error Dialog");
        alert.setContentText(errorMsg);

        alert.show();
    }
    public static boolean emptySpace(String a, String b, String c, String d, String e,String f){
        if( a.length() == 0 || b.length() == 0 || c.length() == 0 || d.length() == 0 || e.length() == 0 || f.length() == 0 ){
          return true;
         }
        else{
         return false;
        }
        
    
    
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        launch(args);
    }
    
}